<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

       <!--读取配置文件的配置信息-->
       <bean
               class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="locations">
                     <list>
                            <value>classpath:jdbc.properties</value>
                     </list>
              </property>
       </bean>

       <!-- 数据库连接池 -->
       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
             destroy-method="close">
              <property name="driverClassName" value="${jdbc.driverClassName}" />
              <property name="url" value="${jdbc.url}" />
              <property name="username" value="${jdbc.username}" />
              <property name="password" value="${jdbc.password}" />
              <!-- 配置初始化大小、最小、最大 -->
              <property name="initialSize" value="10" />
              <property name="minIdle" value="10" />
              <property name="maxActive" value="300" />
              <!-- 配置获取连接等待超时的时间 -->
              <property name="maxWait" value="60000" />
              <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt; -->
              <property name="timeBetweenEvictionRunsMillis" value="60000" />
              <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
              <property name="minEvictableIdleTimeMillis" value="300000" />
              <property name="validationQuery" value="SELECT 'x'" />
              <property name="testWhileIdle" value="true" />
              <property name="testOnBorrow" value="false" />
              <property name="testOnReturn" value="false" />
       </bean>

       <!-- 3.配置SqlSessionFactory对象 -->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <!-- 注入数据库连接池 -->
              <property name="dataSource" ref="dataSource" />
              <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
              <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
              <!-- 扫描entity包 使用别名 -->
              <!-- <property name="typeAliasesPackage" value="com.sac.wwg.entity" /> -->
              <!-- 扫描sql配置文件:mapper需要的xml文件 -->
              <property name="mapperLocations" value="classpath:mapper/*.xml" />
       </bean>

       <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
              <!-- 注入sqlSessionFactory -->
              <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
              <!-- 给出需要扫描Dao接口包 -->
              <property name="basePackage" value="com.sac.dao" />
       </bean>

</beans>