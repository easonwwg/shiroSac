<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

       <!-- 授权 认证
        自定义
        -->
       <bean id="sampleRealm" class="com.sac.shiro.core.SecurityRealm" >
           <!--密碼通過credentialsMatcher比對-->
           <property name="credentialsMatcher">
               <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                   <property name="hashAlgorithmName" value="MD5"></property>
                   <property name="hashIterations" value="1"></property>
                   <!--也可以配置yan-->
                   <property name="hashSalted" value="true"></property>
               </bean>
           </property>
       </bean>

       <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
              <property name="realm" ref="sampleRealm"/>
              <property name="cacheManager" ref="ehCacheManager"/>
       </bean>

       <!-- 配置 shiro 的 ehcache 缓存相关,这个缓存只和 Realm 相关 -->
       <bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
              <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
       </bean>

       <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
              <property name="securityManager" ref="securityManager" />
              <!-- 如果认证不通过,浏览器通过 Get 方式请求到 /login 上  可以直接些jsp吗？ -->
              <property name="loginUrl" value="/user/login"/>
              <property name="successUrl" value="/user/main"/>
              <property name="unauthorizedUrl" value="/user/error" />
              <property name="filterChainDefinitions">
              <value>
                    /user/login = anon
                     /user/checklogin =anon
                     /resources/** = anon
                     /user/error =anon
                     /** = authc
              </value>
              </property>
       </bean>
       <!-- Shiro生命周期处理器-->
       <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

       <!-- AOP式方法级权限检查 -->
       <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
             depends-on="lifecycleBeanPostProcessor">
            <!--  <property name="proxyTargetClass" value="true" />-->
       </bean>

       <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
              <property name="securityManager" ref="securityManager" />
       </bean>

</beans>