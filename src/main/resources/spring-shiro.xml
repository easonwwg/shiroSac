<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 自定义一个权限匹配器 -->
    <bean id="permissionResolver" class="com.sac.shiro.core.UrlPermissionResolver"/>
    <!-- 授权 认证
     自定义
     -->
    <bean id="sampleRealm" class="com.sac.shiro.core.SecurityRealm">
        <!-- 将自定义的权限匹配器注入到自定义 Realm 中 -->
       <property name="permissionResolver" ref="permissionResolver"/>
        <!--密碼通過credentialsMatcher比對-->
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"></property>
                <property name="hashIterations" value="1"></property>
                <!--也可以配置yan-->
                <property name="hashSalted" value="true"></property>
            </bean>
        </property>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="sampleRealm"/>
        <!--配置缓存 这个是基于redis的缓存 缓存角色和权限的信息，避免每次都去查询数据库，照成数据库的压力-->
       <!-- <property name="cacheManager" ref="ehCacheManager"/>-->
        <!--session的管理-->
        <!--这个是基于redis的缓存-->
      <property name="cacheManager" ref="customShiroCacheManager"/>
       <!-- <property name="sessionManager" ref="sessionManager"/>-->
    </bean>

    <!--自定义cacheManager-->
    <bean id="customShiroCacheManager" class="com.sac.shiro.cache.CustomShiroCacheManager">
        <property name="shiroCacheManager" ref="jedisShiroCacheManager"/>
    </bean>
    <bean id="jedisShiroCacheManager" class="com.sac.shiro.cache.JedisShiroCacheManager">
        <property name="jedisManager" ref="jedisManager"/>
    </bean>
    <!-- redis 的缓存 -->
   <bean id="jedisManager" class="com.sac.shiro.cache.JedisManager">
        <property name="jedisPool" ref="jedisPool"/>
    </bean>

    <!-- 配置 shiro 的 ehcache 缓存相关,这个缓存只和 Realm 相关 -->
   <!-- <bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>-->

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- 如果认证不通过,浏览器通过 Get 方式请求到 /login 上  可以直接些jsp吗？ -->
        <property name="loginUrl" value="/user/login"/>
        <property name="successUrl" value="/user/main"/>
        <property name="unauthorizedUrl" value="/user/error"/>
        <property name="filterChainDefinitions">
            <value>
                /user/login = anon
                /user/checklogin =anon
                /resources/** = anon
                /user/error =anon
                /favicon.ico = anon
                /user/logout = logout
               /** = authc , resourceCheckFilter
              <!--  /** =user,resourceCheckFilter-->
            </value>
        </property>
    </bean>

    <!-- 声明一个自定义的过滤器 -->
    <bean id="resourceCheckFilter" class="com.sac.shiro.filter.ResourceCheckFilter">
        <!-- 为上面声明的自定义过滤器注入属性值 -->
        <property name="errorUrl" value="/user/error"/>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <!--如需要注解开发 需要加如下内容-->
       <property name="proxyTargetClass" value="true" />
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--注解开发需要加入一下内容-->
   <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
          <!--    &lt;!&ndash;  &lt;!&ndash;登录&ndash;&gt;
                <prop key="org.apache.shiro.authz.UnauthenticatedException">
                    redirect:/login
                </prop>
                &lt;!&ndash;授权&ndash;&gt;
                <prop key="org.apache.shiro.authz.UnauthorizedException">
                    redirect:/admin/common/exceptionLog
                </prop>&ndash;&gt;-->
            </props>
        </property>
        <property name="defaultErrorView" value="redirect:/user/error"/>
    </bean>

     <!--session的会话管理-->

    <!--全局会话坚监听-->
    <bean id="customSessionListener" class="com.sac.shiro.session.CustomSessionListener"/>


    <bean id="sessionDAO" class="com.sac.shiro.session.ShrioSessionDao"></bean>

    <bean id="sessionManager"  class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDAO"></property>
         <property name="sessionListeners">
             <list>
                 <ref bean="customSessionListener"></ref>
             </list>
         </property>

    </bean>

</beans>