<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 组件扫描 -->
    <context:component-scan base-package="com.sac.web"/>
    <!-- 组件扫描 -->
    <context:component-scan base-package="com.sac.rest"/>

    <!-- 配置SpringMVC -->
    <!-- 1.开启SpringMVC注解模式 -->
    <!-- 简化配置： (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter (2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持 -->
    <mvc:annotation-driven validator="validator" enable-matrix-variables="true">
        <!-- 消息转换器,解决responseBody返回中外乱码问题 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property value="text/plain;charset=UTF-8" name="supportedMediaTypes"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!-- hibernate校验器-->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
    </bean>

    <!--配置視圖解析器-->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--静态资源访问-->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- 自定义swagger -->
    <bean class="com.sac.swagger.SwaggerRestApiConfig"/>

    <mvc:resources location="classpath:/META-INF/resources/"
                   mapping="swagger-ui.html"/>
    <mvc:resources location="classpath:/META-INF/resources/webjars/"
                   mapping="/webjars/**"/>

    <!-- 文件上传下载 -->
    <!-- 定义文件解释器 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置默认编码 -->
        <property name="defaultEncoding" value="utf-8"></property>
        <!-- 上传图片最大大小5M -->
        <property name="maxUploadSize" value="10485760"></property>
    </bean>

    <!-- 配置文件信息 -->
    <bean id="configProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:path.properties</value>
            </list>
        </property>
    </bean>

    <!--定义控制器方法的拦截，主要可以记录一些日志的信息
         方法1-->
    <!--  <bean id="controllerMethodInterceptor" class="com.sac.aop.ControllerMethodInterceptor">
      </bean>
      <aop:config proxy-target-class="true">
          <aop:pointcut id="methodPoint"
                        expression="execution(* com.sac.rest..*.*(..))
                                 or execution(* com.sac.web..*.*(..))"/>
          <aop:advisor pointcut-ref="methodPoint"
                       advice-ref="controllerMethodInterceptor"/>
      </aop:config>-->

    <!--spring-mvc和service中都要加入-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--统一异常处理-->
    <bean id="exceptionHandler" class="com.sac.aop.MyExceptionHandler"/>

    <bean id="globalExceptionHandler" class="com.sac.aop.GlobalExceptionHandler"/>

</beans>